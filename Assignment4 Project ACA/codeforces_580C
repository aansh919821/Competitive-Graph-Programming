#include <bits/stdc++.h>
#define ll long long 
using namespace std;

const ll MAX_LIMIT = 100000000000000LL;
const int MAX_NODES = 228228;

vector<ll> adj[MAX_NODES];
ll cats[MAX_NODES], totalPaths = 0;
ll nodes, maxConCats;

void solve(ll cur, ll parent, ll conCats) {
    if (conCats > maxConCats) return;
    
    bool isLeaf = true;
    for (ll i = 0; i < adj[cur].size(); i++) {
        if (adj[cur][i] != parent) {
            isLeaf = false;
            solve(adj[cur][i], cur, conCats * cats[adj[cur][i]] + cats[adj[cur][i]]);
        }
    }
    if (isLeaf) totalPaths++;
}

int main() {
    cin >> nodes >> maxConCats;
    for (ll i = 0; i < nodes; i++) {
        cin>>cats[i];
    }
    for (ll i = 0; i < nodes-1; i++) {
        ll x, y;
        cin >> x >> y;
        x--; y--;
        adj[x].push_back(y);
        adj[y].push_back(x);
    }
    solve(0, -1, cats[0]);
    cout << totalPaths << "\n";
    return 0;
}
